'From Squeak5.0 of 6 August 2015 [latest update: #15113] on 26 October 2015 at 11:21:36 pm'!Object subclass: #MainWindow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'HidatoClasses'!Object subclass: #Matriz	instanceVariableNames: 'buttons availableCount'	classVariableNames: ''	poolDictionaries: ''	category: 'HidatoClasses'!SimpleButtonMorph subclass: #Square	instanceVariableNames: 'xPosition yPosition isPressed num isPlaying isAvailable posibles'	classVariableNames: 'NumberToSet'	poolDictionaries: ''	category: 'HidatoClasses'!Square class	instanceVariableNames: 'NumberToSet'!!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 21:11'!buttons	^buttons! !!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 23:20'!initialize	|x y |	super initialize.	x:=20.	y:=20.	buttons:= Array new: 10.	1 to: 10 do: [:i| buttons at: i put: (Array new: 10)].		1 to: 10 do: [:i|		1 to: 10 do: [:j|			(buttons at: i) at:j put: (Square new).			((buttons at: i) at:j) X:x Y:y. 			x:=x+50.].		x:=20.		y:=y+50].	Square initValue.	availableCount:=0.! !!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 22:48'!obtenerPosibles: i J:j  	|options x y|	options:=OrderedCollection new:8.	x:=(i-1).	y:=(j-1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].				x:=i.	y:=(j-1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].			x:=(i+1).	y:=(j-1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].			x:=(i-1).	y:=(j).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].			x:=(i+1).	y:=(j).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].				x:=(i-1).	y:=(j+1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].			x:=(i).	y:=(j+1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].		x:=(i+1).	y:=(j+1).	(x>0 and: y>0 and: x<11 and: y<11)	ifTrue:[		options add:((buttons at: x) at:y)].		^options! !!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 22:34'!setPosibles 	1 to: 10 do: [:i|		1 to: 10 do: [:j|			((buttons at: i) at:j) isAvailable =True			ifTrue:[				((buttons at: i) at:j) setPosibles: (self obtenerPosibles: i J:j).				].					].	].! !!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 23:19'!startPlaying		1 to: 10 do: [:i|		1 to: 10 do: [:j|			((buttons at: i) at:j) num =1			ifTrue:[				((buttons at: i) at:j) setAvailable:True.				availableCount:=availableCount+1] 			ifFalse:[				((buttons at: i) at:j) setAvailable:False].			((buttons at: i) at:j) startPlaying.			].		].	Square initValue.! !!Matriz methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 23:20'!verificaGane	|posibles isThere counter|	self setPosibles.	counter:=1.	isThere:=False.	1 to: 10 do: [:i|		1 to: 10 do: [:j|			((buttons at: i) at:j) isAvailable=True			ifTrue:[				counter := ((buttons at: i) at:j) num.				counter:=(counter+1).				posibles:=(((buttons at: i) at:j) getPosibles).				1 to:  (posibles size) do:				[:m|					((posibles at: m) num =counter or: ((buttons at: i) at:j) num=availableCount)					ifTrue:[						isThere:=True.					]													].				isThere=True				ifTrue:[					isThere:=False.				]				ifFalse:[					^False				].			]			 			].	].	^True! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 18:00'!X^xPosition! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 20:31'!X: posX Y: posY super initialize.xPosition:= posX.yPosition:=posY.isPressed:=False.isPlaying:=False.isAvailable:=True.num:=0.self label: (num) printString.self position: xPosition@yPosition.self width: 50.self height: 50.self openInWorld.self on: #click send: #setNextValue to:self.	! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 18:00'!Y^yPosition! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 21:58'!getPosibles^posibles! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 21:46'!isAvailable^isAvailable! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 20:32'!num^num! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 20:41'!setAvailable: boolValue	isAvailable:=boolValue.	isAvailable=True	ifTrue:[		self label: (0) printString.		self width: 50.		self height: 50.		]	ifFalse:[		self label: '###'.		self width: 50.		self height: 50.		].		! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 20:31'!setNextValue	isPlaying=True	ifTrue:[	isAvailable=True	ifTrue:[	isPressed=True	ifFalse: [		Square incValue.		num:= (Square Number).		self label: (num) printString.		self width: 50.		self height: 50.		isPressed:= True.		]	ifTrue:[Square decValue.		num:= 0.		self label: (num) printString.		self width: 50.		self height: 50.		isPressed:= False.].	]]	ifFalse:[		num:=1.		self label: (num) printString.		self width: 50.		self height: 50.		]! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 21:43'!setPosibles: pposibles	posibles:=pposibles.! !!Square methodsFor: 'initialization' stamp: 'JMA 10/26/2015 20:44'!startPlaying	isPlaying:=True.! !!Square class methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 16:21'!Number	^NumberToSet! !!Square class methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 16:16'!decValue	NumberToSet:=(NumberToSet)-1.! !!Square class methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 16:15'!incValue	NumberToSet:=(NumberToSet)+1.! !!Square class methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 20:47'!initValue	NumberToSet:=0.! !!Square class methodsFor: 'as yet unclassified' stamp: 'JMA 10/26/2015 16:24'!initValue: val	NumberToSet:=val.! !Square removeSelector: #initialize!Square removeSelector: #starPlaying!!Square reorganize!('initialization' X X:Y: Y getPosibles isAvailable num setAvailable: setNextValue setPosibles: startPlaying)!Matriz removeSelector: #obtenerPosibles:!Matriz removeSelector: #setPosibles:!MainWindow removeSelector: #hello!